from aiogram import types, Router, F
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart, Command, or_f
from aiogram.types import ReplyKeyboardRemove
from filters.type_of_chat import ChatTypeFilter
from keyboards.for_navigate import keyboard
from aiogram.utils.formatting import as_marked_section, Bold, TextLink

private_router = Router()
private_router.message.filter((ChatTypeFilter(["private"])))


@private_router.message(or_f(CommandStart(), F.text == "‚Ü™Ô∏è–ù–∞–∑–∞–¥"))
async def start_cmd(message: types.Message):
    await message.answer("""<b>C–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:</b>
<i>1. üí°–ó–∞–ø—É—Å—Ç–∏—Ç–∏ –±–æ—Ç–∞ - /start
2. üóÑC–ø–∏—Å–æ–∫ –∫–Ω–∏–≥ - /my_book
3. üîó–ü–æ—Å–∏–ª–∞–Ω–Ω—è - /links
4. üìÑ–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –±–æ—Ç–∞ - /about</i>""", reply_markup=keyboard.as_markup(
            resize_keyboard=True,
            input_field_placeholder="–í–∏–±–µ—Ä—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É"
    ))


@private_router.message(or_f(Command("about"), F.text == "üìÑ–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –±–æ—Ç–∞"))
async def option_cmd(message: types.Message):
    await message.answer("info about <b><u>bot</u></b>")


@private_router.message(or_f(Command("links"), F.text == "üîó–ü–æ—Å–∏–ª–∞–Ω–Ω—è"))
async def option_cmd(message: types.Message):
    text = as_marked_section(
        Bold("Active links"),
        TextLink("–ê–≤—Ç–æ—Ä –±–æ—Ç–∞", url="https://t.me/k0nn4"),
        TextLink("–ì—Ä—É–ø–∞ –∑ –±–æ—Ç–æ–º", url="https://t.me/+-P_ukdQI6Pg1YjU6"),
        marker="‚ö°Ô∏è"
    )
    await message.answer(text.as_html())


# @private_router.message((F.text.lower() == "—Ä–æ–∑–∫–ª–∞–¥") | (F.text.contains("schedule")))
# @private_router.message(Command("schedule"))
# async def option_cmd(message: types.Message):
#     await message.answer("our current schedule")
